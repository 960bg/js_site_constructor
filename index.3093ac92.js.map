{"mappings":"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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-c32490fbbd1d5e61.js","src/index.js","src/model.js","node_modules/@parcel/runtime-js/lib/runtime-7cc63508def59450.js","src/classes/blocks.js","src/utils.js","src/classes/site.js","src/classes/sidebar.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5ad8\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5ad8\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $3adf94fc8820f571$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse('[\"7GeUN\",\"index.3093ac92.js\",\"185j8\",\"homer.432f1a35.jpg\",\"TJjPh\",\"index.3ec1d245.css\"]'));\n\nvar $ed7f1cf8b00ff8b9$exports = {};\n$ed7f1cf8b00ff8b9$exports = new URL(\"homer.432f1a35.jpg\", import.meta.url).toString();\n\n\nfunction $820877bea407f5fe$export$120ff0929b202a6d(content) {\n    return `<div class=\"row\"> ${content} </div>`;\n}\nfunction $820877bea407f5fe$export$aba86695643891f5(content) {\n    return `<div class=\"col-sm\"> ${content} </div>`;\n}\nfunction $820877bea407f5fe$export$463b44d9bf3628be(content) {\n    if (content.value) return `<img src=\"${content.value}\" style=\"${$820877bea407f5fe$export$dbf350e5966cf602(content.options.styles)}\" alt=\"${content.options.alt}\"/>`;\n}\nfunction $820877bea407f5fe$export$28c098a73ddff876(value, styles, tag) {\n    const htmlCode = `\n    <${tag} style=\"${$820877bea407f5fe$export$dbf350e5966cf602(styles)}\">\n    ${value}\n    </${tag}>\n    `;\n    return htmlCode;\n}\nfunction $820877bea407f5fe$export$dbf350e5966cf602(styles = {}) {\n    // если пришла строка - вернем ее же,\n    if (typeof styles === \"string\") return styles;\n    // если пришел объект - преобразование к строке\n    const toString = (key)=>`${key}: ${styles[key]};`;\n    return Object.keys(styles).map(toString).join(\"\");\n}\nfunction $820877bea407f5fe$export$f681a8129d2e9d28(type) {\n    return `\n  <form name=\"${type}\">\n  <h5>${type}</h5>\n  <div class=\"form-group\">\n    <input class=\"form-control form-control-sm\" type=\"text\" name=\"value\" placeholder=\"value\">\n  </div>\n  <div class=\"form-group\">\n    <input class=\"form-control form-control-sm\" type=\"text\" name=\"styles\" placeholder=\"styles\">\n  </div>\n  <button class=\"btn btn-primary btn-sm\" type=\"submit\" >\\u{414}\\u{43E}\\u{431}\\u{430}\\u{432}\\u{438}\\u{442}\\u{44C}</button>\n</form>\n<hr>\n`;\n}\nfunction $820877bea407f5fe$export$b12d54a0848fd98d(value, styles, tag = \"img\", alt = \"\\u041A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0430\") {\n    if (typeof value !== \"string\") console.log(\"stringToImg(): \\u0412 \\u043F\\u0430\\u0440\\u0430\\u043C\\u0435\\u0442\\u0440\\u0435 \\u0434\\u043E\\u043B\\u0436\\u043D\\u0430 \\u0431\\u044B\\u0442\\u044C \\u043F\\u0435\\u0440\\u0435\\u0434\\u0430\\u043D\\u0430 \\u0441\\u0442\\u0440\\u043E\\u043A\\u0430\");\n    return {\n        value: value,\n        options: {\n            tag: tag,\n            alt: alt,\n            styles: styles\n        }\n    };\n}\n\n\nclass $9ada7997da127f4c$var$Block {\n    constructor(value, options){\n        this.value = value;\n        this.options = options;\n    }\n    toHtml() {\n        throw new Error(\"\\u041C\\u0435\\u0442\\u043E\\u0434 toHtml \\u0434\\u043E\\u043B\\u0436\\u0435\\u043D \\u0431\\u044B\\u0442\\u044C \\u0440\\u0435\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u043D\");\n    }\n}\nclass $9ada7997da127f4c$var$TitleBlock extends $9ada7997da127f4c$var$Block {\n    constructor(value, options){\n        super(value, options);\n    }\n    toHtml() {\n        const { tag: tag = \"h1\", styles: styles } = this.options;\n        return (0, $820877bea407f5fe$export$120ff0929b202a6d)((0, $820877bea407f5fe$export$aba86695643891f5)((0, $820877bea407f5fe$export$28c098a73ddff876)(this.value, styles, tag)));\n    }\n}\nclass $9ada7997da127f4c$var$TextBlock extends $9ada7997da127f4c$var$Block {\n    constructor(value, options){\n        super(value, options);\n    }\n    toHtml() {\n        const { tag: tag = \"p\", styles: styles } = this.options;\n        return (0, $820877bea407f5fe$export$120ff0929b202a6d)((0, $820877bea407f5fe$export$aba86695643891f5)((0, $820877bea407f5fe$export$28c098a73ddff876)(this.value, styles, tag)));\n    }\n}\n/*  Блок работает с массивом данных, \nесли в value= строка то разделитель для массива = \",\" */ class $9ada7997da127f4c$var$ColumnsBlock extends $9ada7997da127f4c$var$Block {\n    constructor(value, options){\n        super(value, options);\n    }\n    toHtml() {\n        const { tag: tag = \"h1\", styles: styles } = this.options;\n        // если пришел не массив с колонками а строка \n        // преобразовать строку в массив\n        const valueForColumns = typeof this.value === \"string\" ? this.value.split(\",\") : this.value;\n        // если пришло изображение тогда \n        // создаем объект для картинки\n        // и передаем в ф-ю img для подготовки html кода для картинки\n        function StrOrImgToHtml(blockValue) {\n            // передали текст а не ссылку на изображение\n            if (blockValue.search(\"http\") === -1) // если строка - вернуть ее же\n            return blockValue;\n            // если изображение\n            const image = (0, $820877bea407f5fe$export$b12d54a0848fd98d)(blockValue, styles);\n            return (0, $820877bea407f5fe$export$463b44d9bf3628be)(image);\n        }\n        const codeHtml = (blockValue)=>(0, $820877bea407f5fe$export$28c098a73ddff876)(StrOrImgToHtml(blockValue), styles, tag);\n        const html = valueForColumns.map((blockValue)=>(0, $820877bea407f5fe$export$aba86695643891f5)(codeHtml(blockValue))).join(\"\");\n        return (0, $820877bea407f5fe$export$120ff0929b202a6d)(html);\n    }\n}\nclass $9ada7997da127f4c$var$ImageBlock extends $9ada7997da127f4c$var$Block {\n    constructor(value, options){\n        super(value, options);\n    }\n    toHtml() {\n        return (0, $820877bea407f5fe$export$120ff0929b202a6d)((0, $820877bea407f5fe$export$463b44d9bf3628be)(this));\n    }\n}\nconst $9ada7997da127f4c$export$2ba1b65b747a57aa = {\n    ImageBlock: $9ada7997da127f4c$var$ImageBlock,\n    ColumnsBlock: $9ada7997da127f4c$var$ColumnsBlock,\n    TextBlock: $9ada7997da127f4c$var$TextBlock,\n    TitleBlock: $9ada7997da127f4c$var$TitleBlock\n};\n\n\nconst $d7fcaaa29d0ffaa7$var$textCreateBlockHtml = \"HTML \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u0444\\u043E\\u0440\\u043C\\u0438\\u0440\\u0443\\u0435\\u0442 JS, \\u0438\\u0441\\u0445\\u043E\\u0434\\u043D\\u044B\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0434\\u043B\\u044F \\u0431\\u043B\\u043E\\u043A\\u043E\\u0432 \\u0437\\u0430\\u043F\\u0438\\u0441\\u0430\\u043D\\u044B \\u0432 \\u0444\\u0430\\u0439\\u043B\\u0435 model.js.\";\nconst $d7fcaaa29d0ffaa7$export$39a8f6bed6e94390 = [\n    new (0, $9ada7997da127f4c$export$2ba1b65b747a57aa).TitleBlock(\"\\u041A\\u043E\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0442\\u043E\\u0440 \\u0441\\u0430\\u0439\\u0442\\u043E\\u0432 \\u043D\\u0430 JS\", {\n        tag: \"h2\",\n        styles: {\n            background: \"linear-gradient(to right, #ff0099, #493240)\",\n            color: \"#fff\",\n            padding: \"0.7em\"\n        }\n    }),\n    new (0, $9ada7997da127f4c$export$2ba1b65b747a57aa).TextBlock($d7fcaaa29d0ffaa7$var$textCreateBlockHtml, {\n        tag: \"p\",\n        styles: {\n            background: \"linear-gradient(to left, #f2994a, #f2c94c)\",\n            color: \"#fff\",\n            padding: \"0.5em\",\n            \"font-weight\": \"bold\"\n        }\n    }),\n    new (0, $9ada7997da127f4c$export$2ba1b65b747a57aa).ColumnsBlock([\n        \"\\u0444\\u0430\\u0439\\u043B templates.js - \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438 \\u043E\\u0431\\u0435\\u0440\\u0442\\u043A\\u0438 \\u0432 HTML \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\\u043E\\u0432 \\u0438\\u0437 \\u0444\\u0430\\u0439\\u043B\\u0430 model.js\",\n        \"\\u0444\\u0430\\u0439\\u043B utils.js - \\u0444\\u0443\\u043D\\u043A\\u0446\\u0438\\u0438 \\u0432\\u044B\\u0437\\u044B\\u0432\\u0430\\u0435\\u043C\\u044B\\u0435 \\u0438\\u0437 templates.js\",\n        \"\\u0444\\u0430\\u0439\\u043B blocks.js - \\u043A\\u043B\\u0430\\u0441\\u0441\\u044B \\u0434\\u043B\\u044F \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\\u043E\\u0432 \\u0431\\u043B\\u043E\\u043A\\u043E\\u0432 \\u0438\\u0437 model.js\"\n    ], {\n        tag: \"p\",\n        styles: {\n            background: \"linear-gradient(to bottom, #8e2de2, #4a00e0)\",\n            color: \"#fff\",\n            padding: \"0.5em\",\n            \"font-weight\": \"bold\"\n        }\n    }),\n    new (0, $9ada7997da127f4c$export$2ba1b65b747a57aa).ImageBlock((0, (/*@__PURE__*/$parcel$interopDefault($ed7f1cf8b00ff8b9$exports))), {\n        tag: \"img\",\n        alt: \"\\u041A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0430 \\u0413\\u043E\\u043C\\u0435\\u0440 \\u0421\\u0438\\u043C\\u043F\\u0441\\u043E\\u043D\",\n        styles: {\n            width: \"150px\",\n            height: \"auto\",\n            border: \"solid 5px\",\n            background: \"linear-gradient(to top, #00e5ff, #4761bf)\",\n            display: \"flex\",\n            \"justify-content\": \"center\",\n            color: \"#fff\",\n            padding: \"0.5em\"\n        }\n    }),\n    new (0, $9ada7997da127f4c$export$2ba1b65b747a57aa).ColumnsBlock([\n        \"\\u0421\\u0442\\u0438\\u043B\\u0438: \\u0434\\u043B\\u044F \\u0441\\u0435\\u0442\\u043A\\u0438 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0435\\u0442\\u0441\\u044F bootstrap.\",\n        \"\\u0421\\u0442\\u0438\\u043B\\u0438: \\u043E\\u0441\\u0442\\u0430\\u043B\\u044C\\u043D\\u044B\\u0435 \\u0441\\u0442\\u0438\\u043B\\u0438 \\u043F\\u0440\\u043E\\u043F\\u0438\\u0441\\u044B\\u0432\\u0430\\u044E\\u0442\\u0441\\u044F \\u0432 \\u0444\\u0430\\u0439\\u043B\\u0435 model.js \\u0434\\u043B\\u044F \\u043A\\u0430\\u0436\\u0434\\u043E\\u0433\\u043E \\u0431\\u043B\\u043E\\u043A\\u0430 \\u0432 \\u0441\\u0435\\u043A\\u0446\\u0438\\u0438 styles\",\n        \"HTML \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0443 \\u0444\\u043E\\u0440\\u043C\\u0438\\u0440\\u0443\\u0435\\u0442 JS\"\n    ], {\n        tag: \"p\",\n        styles: {\n            background: \"linear-gradient(to right, #00e5ff, #4761bf)\",\n            color: \"#fff\",\n            padding: \"0.5em\"\n        }\n    })\n]; // СТАРАЯ МОДЕЛЬ БЕЗ ИСПОЛЬЗОВАНИЯ КЛАССОВ\n // export const model = [\n // {\n //   type: 'f_title',\n //   value: 'Конструктор сайтов на JS',\n //   options: {\n //     tag: 'h2',\n //     styles: {\n //       background: 'linear-gradient(to right, #ff0099, #493240)',\n //       color: '#fff',\n //       padding: '0.5em',\n //     },\n //   }\n // },\n // {\n //   type: 'f_columns',\n //   value: ['Конструктор сайтов на JS',],\n //   options: {\n //     tag: 'h2',\n //     styles: {\n //       background: 'linear-gradient(to right, #ff0099, #493240)',\n //       color: '#fff',\n //       padding: '0.5em',\n //     },\n //   },\n // },\n // {\n //   type: 'f_text',\n //   value: 'text text text js!',\n // },\n // {\n //   type: 'f_columns',\n //   value: ['HTML страницу формирует JS',\n //     textCreateBlockHtml,],\n //   options: {\n //     tag: 'p',\n //     styles: {\n //       background: 'linear-gradient(to right, #ff0099, #493240)',\n //       color: '#fff',\n //       padding: '0.5em',\n //       'font-weight': '600',\n //     },\n //   }\n // },\n // {\n //   type: 'f_columns',\n //   value: [\n //     'Стили: для сетки используется bootstrap.',\n //     'Стили: остальные стили прописываются в файле model.js для каждого блока в секции styles',\n //     'three',\n //   ],\n //   options: {\n //     tag: 'p',\n //     styles: {\n //       background: 'linear-gradient(to right, #00e5ff, #4761bf)',\n //       color: '#fff',\n //       padding: '0.5em',\n //     },\n //   }\n // },\n // {\n //   type: 'f_image',\n //   value: imagePath,\n //   options: {\n //     tag: 'p',\n //     alt: 'Картинка Гомер Симпсон',\n //     styles: {\n //       width: '150px',\n //       border: 'solid 5px',\n //       background: 'linear-gradient(to top, #00e5ff, #4761bf)',\n //       color: '#fff',\n //       padding: '0.5em',\n //     },\n //   },\n //   // './src/assets/homer.jfif',\n // },];\n\n\nclass $79d2f88b04a7ef3e$export$ca6fd6057d03ddab {\n    constructor(selector){\n        this.$element = document.querySelector(selector);\n    }\n    render(model) {\n        model.forEach((block)=>{\n            this.$element.insertAdjacentHTML(\"beforeend\", block.toHtml());\n        });\n    }\n}\n\n\n\n\n\n\nclass $10328ebd87509e12$export$1ba59dacbcbf90fe {\n    constructor(selector){\n        this.$element = document.querySelector(selector);\n        this.init();\n    }\n    init() {\n        this.$element.insertAdjacentHTML(\"afterbegin\", this.template);\n        this.$element.addEventListener(\"submit\", this.add);\n    }\n    get template() {\n        return [\n            (0, $820877bea407f5fe$export$f681a8129d2e9d28)(\"TextBlock\"),\n            (0, $820877bea407f5fe$export$f681a8129d2e9d28)(\"TitleBlock\"),\n            (0, $820877bea407f5fe$export$f681a8129d2e9d28)(\"ColumnsBlock\"),\n            (0, $820877bea407f5fe$export$f681a8129d2e9d28)(\"ImageBlock\")\n        ].join(\"\");\n    }\n    add(event) {\n        event.preventDefault();\n        const type = event.target.name;\n        const value = event.target.value.value;\n        const styles = event.target.styles.value;\n        // создать блок в html\n        const newBlock = new (0, $9ada7997da127f4c$export$2ba1b65b747a57aa)[type](value, {\n            styles: styles\n        });\n        const site = new (0, $79d2f88b04a7ef3e$export$ca6fd6057d03ddab)(\"#site\");\n        site.render([\n            newBlock\n        ]);\n    }\n}\n\n\nconst $35da740d59af89ba$var$site = new (0, $79d2f88b04a7ef3e$export$ca6fd6057d03ddab)(\"#site\");\n$35da740d59af89ba$var$site.render((0, $d7fcaaa29d0ffaa7$export$39a8f6bed6e94390));\nconst $35da740d59af89ba$var$sidebar = new (0, $10328ebd87509e12$export$1ba59dacbcbf90fe)(\"#panel\"); // --start СТАРАЯ РЕАЛИЗАЦИЯ КЛАССЫ - без использования абстракции класса Site \n // const $site = document.querySelector('#site');\n // import { title, text, columns, image } from './templates.js';\n // import { templates } from './templates.js';\n // import { TitleBlock, TextBlock, ColumnsBlock, ImageBlock } from './classes/blocks.js';\n // для каждого объекта вызываем его метод toHtml() для добавления полей объекта \n // на web-страницу\n // model.forEach(block => {\n //   $site.insertAdjacentHTML('beforeend', block.toHtml());\n // });\n // --end СТАРАЯ РЕАЛИЗАЦИЯ КЛАССЫ - без использования абстракции класса Site \n // СТАРАЯ РЕАЛИЗАЦИЯ БЕЗ КЛАССОВ - через объекты\n //** */   здесь для каждого block из model импортированного из model.js\n //   выполняем функцию из файла templates по переданному\n //   параметру - block.type - это ф - я которая вызовится и в качестве параметра \n //   уже для этой функции подставляем значение которое хранится в массиве объектов model\n //   т.е.в файле model определена структура массив объектов:\n //   массив_объектов = [\n //     {\n //       тип_обработки: имя_функции_обработки,\n //       данные_для_обработки: параметр_для_этойфункции_обработки,\n //     },\n //     {\n //       тип_обработки: имя_функции_обработки,\n //       данные_для_обработки: параметр_для_этойфункции_обработки,\n //     },\n //     {\n //       тип_обработки: имя_функции_обработки,\n //       данные_для_обработки: параметр_для_этойфункции_обработки,\n //     },\n //     а в файле templates - определены функции которые мы вызываем \n //     при обращении к массиву_объектов из model.Это всЁ позволяет убрать\n //     конструкцию switch...и записать код более коротко,\n //   хотя более сложно для понимания\n // поэтому запись - templates[block.type]({ value: block.data })\n // означает взять соотв - ю функцию из templates по block.type из model и\n // передать ей параметр объект { value: block.data } из templates по block.data из model,\n //   в функции мы писали именно объект в качестве параметра\n // и поле объекта по которому обращаемся там указали value \n // let html = templates[block.type]({ value: block.data });\n // model.forEach(block => {\n //   // проверка что ф-я существует\n //   if (templates[block.type]) {\n //     $site.insertAdjacentHTML('beforeend', templates[block.type](block));\n //   }\n //   console.log(templates[block.type]);\n //   // switch (block.type) {\n //   //   case 'title':\n //   //     html = title(block);\n //   //     break;\n //   //   case 'text':\n //   //     html = text(block);\n //   //     break;\n //   //   case 'columns':\n //   //     html = columns(block);\n //   //     break;\n //   //   case 'image':\n //   //     html = image(block);\n //   //     break;\n //   //   default:\n //   //     break;\n //   // }\n // });\n\n\n//# sourceMappingURL=index.3093ac92.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"7GeUN\\\",\\\"index.3093ac92.js\\\",\\\"185j8\\\",\\\"homer.432f1a35.jpg\\\",\\\"TJjPh\\\",\\\"index.3ec1d245.css\\\"]\"));","import { model } from './model.js';\nimport {Site} from './classes/site.js';\n//импорт стилей в js для взаимодействия с js\nimport './style/style.css';\nimport { Sidebar } from './classes/sidebar.js';\n\nconst site = new Site('#site');\n\nsite.render(model);\n\nconst sidebar = new Sidebar('#panel');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// --start СТАРАЯ РЕАЛИЗАЦИЯ КЛАССЫ - без использования абстракции класса Site \n\n\n// const $site = document.querySelector('#site');\n\n// import { title, text, columns, image } from './templates.js';\n// import { templates } from './templates.js';\n\n// import { TitleBlock, TextBlock, ColumnsBlock, ImageBlock } from './classes/blocks.js';\n\n// для каждого объекта вызываем его метод toHtml() для добавления полей объекта \n// на web-страницу\n// model.forEach(block => {\n//   $site.insertAdjacentHTML('beforeend', block.toHtml());\n// });\n\n// --end СТАРАЯ РЕАЛИЗАЦИЯ КЛАССЫ - без использования абстракции класса Site \n\n\n\n\n\n\n// СТАРАЯ РЕАЛИЗАЦИЯ БЕЗ КЛАССОВ - через объекты\n\n//** */   здесь для каждого block из model импортированного из model.js\n\n//   выполняем функцию из файла templates по переданному\n//   параметру - block.type - это ф - я которая вызовится и в качестве параметра \n//   уже для этой функции подставляем значение которое хранится в массиве объектов model\n//   т.е.в файле model определена структура массив объектов:\n//   массив_объектов = [\n//     {\n//       тип_обработки: имя_функции_обработки,\n//       данные_для_обработки: параметр_для_этойфункции_обработки,\n//     },\n//     {\n//       тип_обработки: имя_функции_обработки,\n//       данные_для_обработки: параметр_для_этойфункции_обработки,\n//     },\n//     {\n//       тип_обработки: имя_функции_обработки,\n//       данные_для_обработки: параметр_для_этойфункции_обработки,\n//     },\n\n//     а в файле templates - определены функции которые мы вызываем \n//     при обращении к массиву_объектов из model.Это всЁ позволяет убрать\n//     конструкцию switch...и записать код более коротко,\n//   хотя более сложно для понимания\n\n// поэтому запись - templates[block.type]({ value: block.data })\n// означает взять соотв - ю функцию из templates по block.type из model и\n// передать ей параметр объект { value: block.data } из templates по block.data из model,\n//   в функции мы писали именно объект в качестве параметра\n// и поле объекта по которому обращаемся там указали value \n\n// let html = templates[block.type]({ value: block.data });\n\n\n// model.forEach(block => {\n  \n//   // проверка что ф-я существует\n//   if (templates[block.type]) {\n//     $site.insertAdjacentHTML('beforeend', templates[block.type](block));\n\n//   }\n\n//   console.log(templates[block.type]);\n//   // switch (block.type) {\n\n//   //   case 'title':\n//   //     html = title(block);\n//   //     break;\n\n//   //   case 'text':\n//   //     html = text(block);\n//   //     break;\n\n//   //   case 'columns':\n//   //     html = columns(block);\n//   //     break;\n\n//   //   case 'image':\n//   //     html = image(block);\n//   //     break;\n\n//   //   default:\n//   //     break;\n//   // }\n// });","import imagePath from './assets/homer.jpg';\nimport { Blocks } from './classes/blocks.js';\n\nconst textCreateBlockHtml = 'HTML страницу формирует JS, исходные данные для блоков записаны в файле model.js.';\n\nexport const model = [\n  new Blocks.TitleBlock('Конструктор сайтов на JS', {\n    tag: 'h2',\n    styles: {\n      background: 'linear-gradient(to right, #ff0099, #493240)',\n      color: '#fff',\n      padding: '0.7em',\n    },\n  }),\n\n  new Blocks.TextBlock(textCreateBlockHtml, {\n    tag: 'p',\n    styles: {\n      background: 'linear-gradient(to left, #f2994a, #f2c94c)',\n      color: '#fff',\n      padding: '0.5em',\n      'font-weight': 'bold',\n    },\n  },),\n\n  new Blocks.ColumnsBlock([\n    'файл templates.js - функции обертки в HTML объектов из файла model.js',\n    'файл utils.js - функции вызываемые из templates.js',\n    'файл blocks.js - классы для объектов блоков из model.js',\n  ], {\n    tag: 'p',\n    styles: {\n      background: 'linear-gradient(to bottom, #8e2de2, #4a00e0)',\n      color: '#fff',\n      padding: '0.5em',\n      'font-weight': 'bold',\n    },\n  },),\n\n  new Blocks.ImageBlock(imagePath, {\n    tag: 'img',\n    alt: 'Картинка Гомер Симпсон',\n    styles: {\n      width: '150px',\n      height: 'auto',\n      border: 'solid 5px',\n      background: 'linear-gradient(to top, #00e5ff, #4761bf)',\n      display: 'flex',\n      'justify-content': 'center',\n      color: '#fff',\n      padding: '0.5em',\n    },\n  },),\n\n  new Blocks.ColumnsBlock([\n    'Стили: для сетки используется bootstrap.',\n    'Стили: остальные стили прописываются в файле model.js для каждого блока в секции styles',\n    'HTML страницу формирует JS',\n  ],\n    {\n      tag: 'p',\n      styles: {\n        background: 'linear-gradient(to right, #00e5ff, #4761bf)',\n        color: '#fff',\n        padding: '0.5em',\n      },\n    },)\n\n];\n\n\n// СТАРАЯ МОДЕЛЬ БЕЗ ИСПОЛЬЗОВАНИЯ КЛАССОВ\n// export const model = [\n// {\n//   type: 'f_title',\n//   value: 'Конструктор сайтов на JS',\n//   options: {\n//     tag: 'h2',\n//     styles: {\n//       background: 'linear-gradient(to right, #ff0099, #493240)',\n//       color: '#fff',\n//       padding: '0.5em',\n//     },\n//   }\n// },\n// {\n//   type: 'f_columns',\n//   value: ['Конструктор сайтов на JS',],\n//   options: {\n//     tag: 'h2',\n//     styles: {\n//       background: 'linear-gradient(to right, #ff0099, #493240)',\n//       color: '#fff',\n//       padding: '0.5em',\n//     },\n//   },\n// },\n// {\n//   type: 'f_text',\n//   value: 'text text text js!',\n// },\n// {\n//   type: 'f_columns',\n//   value: ['HTML страницу формирует JS',\n//     textCreateBlockHtml,],\n//   options: {\n//     tag: 'p',\n//     styles: {\n//       background: 'linear-gradient(to right, #ff0099, #493240)',\n//       color: '#fff',\n//       padding: '0.5em',\n//       'font-weight': '600',\n\n//     },\n//   }\n// },\n// {\n//   type: 'f_columns',\n//   value: [\n//     'Стили: для сетки используется bootstrap.',\n//     'Стили: остальные стили прописываются в файле model.js для каждого блока в секции styles',\n//     'three',\n//   ],\n//   options: {\n//     tag: 'p',\n//     styles: {\n//       background: 'linear-gradient(to right, #00e5ff, #4761bf)',\n//       color: '#fff',\n//       padding: '0.5em',\n//     },\n//   }\n// },\n// {\n//   type: 'f_image',\n//   value: imagePath,\n//   options: {\n//     tag: 'p',\n//     alt: 'Картинка Гомер Симпсон',\n//     styles: {\n//       width: '150px',\n//       border: 'solid 5px',\n//       background: 'linear-gradient(to top, #00e5ff, #4761bf)',\n//       color: '#fff',\n//       padding: '0.5em',\n//     },\n//   },\n\n//   // './src/assets/homer.jfif',\n// },];","module.exports = new __parcel__URL__(\"homer.432f1a35.jpg\").toString();","import { row, col, img, css, inHtmlCode, stringToImg } from '../utils.js';\n\nclass Block {\n  constructor(value, options) {\n    this.value = value;\n    this.options = options;\n  }\n\n  toHtml() {\n    throw new Error('Метод toHtml должен быть реализован')\n  }\n}\n\nclass TitleBlock extends Block {\n  constructor(value, options) {\n    super(value, options);\n  }\n\n  toHtml() {\n    const { tag = 'h1', styles } = this.options;\n    return row(col(inHtmlCode(this.value, styles, tag)));\n  }\n}\n\nclass TextBlock extends Block {\n  constructor(value, options) {\n    super(value, options);\n  }\n\n  toHtml() {\n    const { tag = 'p', styles } = this.options;\n    return row(col(inHtmlCode(this.value, styles, tag)));\n  }\n}\n\n\n/*  Блок работает с массивом данных, \nесли в value= строка то разделитель для массива = \",\" */\nclass ColumnsBlock extends Block {\n  constructor(value, options) {\n    super(value, options);\n  }\n\n  toHtml() {\n    const { tag = 'h1', styles } = this.options;\n\n    // если пришел не массив с колонками а строка \n    // преобразовать строку в массив\n    const valueForColumns = (typeof this.value === 'string')\n      ? this.value.split(',')\n      : this.value;\n\n    // если пришло изображение тогда \n    // создаем объект для картинки\n    // и передаем в ф-ю img для подготовки html кода для картинки\n    function StrOrImgToHtml(blockValue) {\n      // передали текст а не ссылку на изображение\n      if (blockValue.search('http') === -1) {\n        // если строка - вернуть ее же\n        return blockValue;\n      }\n\n      // если изображение\n      const image = stringToImg(blockValue, styles);\n      return img(image);\n    }\n\n    const codeHtml = (blockValue) => inHtmlCode(StrOrImgToHtml(blockValue), styles, tag);\n    const html = valueForColumns.map(blockValue => col(codeHtml(blockValue))).join('');\n\n    return row(html);\n  }\n}\n\nclass ImageBlock extends Block {\n  constructor(value, options) {\n    super(value, options);\n  }\n\n  toHtml() {\n    return row(img(this));\n  }\n}\n\nexport const Blocks = {\n  ImageBlock,\n  ColumnsBlock,\n  TextBlock,\n  TitleBlock,\n}","export function row(content) {\n  return `<div class=\"row\"> ${content} </div>`;\n}\n\nexport function col(content) {\n  return `<div class=\"col-sm\"> ${content} </div>`;\n}\n\nexport function img(content) {\n  if (content.value)\n    return `<img src=\"${content.value}\" style=\"${css(content.options.styles)}\" alt=\"${content.options.alt}\"/>`;\n}\n\nexport function inHtmlCode(value, styles, tag) {\n  const htmlCode = `\n    <${tag} style=\"${css(styles)}\">\n    ${value}\n    </${tag}>\n    `;\n  return htmlCode;\n}\n\n\n\nexport function css(styles = {}) {\n  // если пришла строка - вернем ее же,\n  if (typeof styles === 'string') {\n    return styles;\n  }\n\n  // если пришел объект - преобразование к строке\n  const toString = (key) => `${key}: ${styles[key]};`;\n\n  return Object.keys(styles).map(toString).join('');\n}\n\nexport function createForm(type) {\n  return `\n  <form name=\"${type}\">\n  <h5>${type}</h5>\n  <div class=\"form-group\">\n    <input class=\"form-control form-control-sm\" type=\"text\" name=\"value\" placeholder=\"value\">\n  </div>\n  <div class=\"form-group\">\n    <input class=\"form-control form-control-sm\" type=\"text\" name=\"styles\" placeholder=\"styles\">\n  </div>\n  <button class=\"btn btn-primary btn-sm\" type=\"submit\" >Добавить</button>\n</form>\n<hr>\n`;\n}\n\nexport function stringToImg(value, styles, tag = 'img', alt = 'Картинка') {\n  if (typeof value !== 'string') {\n    console.log('stringToImg(): ' + 'В параметре должна быть передана строка');\n  }\n  return {\n    value,\n    options: {\n      tag,\n      alt,\n      styles,\n    }\n  }\n}\n\n","export class Site {\n  constructor(selector) {\n    this.$element = document.querySelector(selector);\n  }\n\n  render(model) {\n    model.forEach(block => {\n      this.$element.insertAdjacentHTML('beforeend', block.toHtml());\n    });\n  }\n}\n\n","import { createForm } from '../utils';\nimport { Blocks } from './blocks.js';\nimport { Site } from './site.js';\n\n\nexport class Sidebar {\n  constructor(selector) {\n    this.$element = document.querySelector(selector);\n    this.init();\n  }\n\n  init() {\n    this.$element.insertAdjacentHTML('afterbegin', this.template);\n    this.$element.addEventListener('submit', this.add);\n  }\n\n\n  get template() {\n    return [\n      createForm('TextBlock'),\n      createForm('TitleBlock'),\n      createForm('ColumnsBlock'),\n      createForm('ImageBlock'),\n    ].join('');\n  }\n\n  add(event) {\n    event.preventDefault();\n\n    const type = event.target.name;\n    const value = event.target.value.value;\n    const styles = event.target.styles.value;\n\n    // создать блок в html\n    const newBlock = new Blocks[type](value, { styles });\n\n    const site = new Site('#site');\n    site.render([newBlock]);\n  }\n}\n\n"],"names":["a","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$ed7f1cf8b00ff8b9$exports","$820877bea407f5fe$export$120ff0929b202a6d","content","$820877bea407f5fe$export$aba86695643891f5","$820877bea407f5fe$export$463b44d9bf3628be","value","$820877bea407f5fe$export$dbf350e5966cf602","options","styles","alt","$820877bea407f5fe$export$28c098a73ddff876","tag","htmlCode","keys","map","key","join","$820877bea407f5fe$export$f681a8129d2e9d28","type","$9ada7997da127f4c$var$Block","constructor","toHtml","$9ada7997da127f4c$export$2ba1b65b747a57aa","ImageBlock","ColumnsBlock","valueForColumns","split","codeHtml","blockValue","StrOrImgToHtml","search","image","console","log","html","TextBlock","TitleBlock","$d7fcaaa29d0ffaa7$export$39a8f6bed6e94390","background","color","padding","__esModule","default","width","height","border","display","$79d2f88b04a7ef3e$export$ca6fd6057d03ddab","selector","$element","document","querySelector","render","model","forEach","block","insertAdjacentHTML","$35da740d59af89ba$var$site","template","addEventListener","add","event","preventDefault","target","name","newBlock","site"],"version":3,"file":"index.3093ac92.js.map"}